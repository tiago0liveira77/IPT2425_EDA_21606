/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.ipt.eda21606.main;

import com.ipt.eda21606.algorithm.DijkstraAlgorithm;
import com.ipt.eda21606.gui.AboutGUI;
import com.ipt.eda21606.model.CityBean;
import com.ipt.eda21606.model.GraphBean;
import com.ipt.eda21606.service.RouteService;
import static com.ipt.eda21606.util.Constants.INPUT_GRAPH_FILE_PATH;
import com.ipt.eda21606.util.DistanceUtils;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import com.ipt.eda21606.util.FileInOutUtils;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;

/**
 *
 * @author pcjoa
 */
public class MainGUI extends javax.swing.JFrame {

    public static List<CityBean> citiesGlobal;
    public static DijkstraAlgorithm dijkstraAlgorithmGlobal;
    public static Map<CityBean, Double> distancesGlobal;
    public static GraphBean graphGlobal;
    public static int AUTONOMY_KM = 200;
    public static String route = "";

    private CityBean selectedCity;
    private CityBean sourceCity;
    private CityBean destinyCity;
    private int GUIListSelectedIndex = 0;
    private boolean isCitiesEmpty = true;

    //ListModel para JList cidades
    public static DefaultListModel<String> listaGUICidades = new DefaultListModel<>();

    private void updateGUILists() {
        isCitiesEmpty = true;
        listaGUICidades.removeAllElements();
        for (CityBean city : citiesGlobal) {
            listaGUICidades.addElement(city.getName());
        }
        if (!listaGUICidades.isEmpty()) {
            isCitiesEmpty = false;
        }
    }

    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        initComponents();
        citiesJList.setModel(listaGUICidades);
        if (FileInOutUtils.fileInputGraph.exists()) {
            graphGlobal = FileInOutUtils.readGraphFile(INPUT_GRAPH_FILE_PATH);
            citiesGlobal = graphGlobal.getCities().stream().toList();
            updateGUILists();
        }
        //updateGUILists();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        Exception = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        citiesJList = new javax.swing.JList<>();
        GUIElectorPanelBottomNav = new javax.swing.JPanel();
        btnFirst = new javax.swing.JButton();
        BtnPrev = new javax.swing.JButton();
        BtnNext = new javax.swing.JButton();
        BtnLast = new javax.swing.JButton();
        CityBtnSearch = new javax.swing.JButton();
        CityTxtBoxSearch = new javax.swing.JTextField();
        CityCloseBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        CityTxtBoxName = new javax.swing.JTextField();
        CityTxtBoxCountry = new javax.swing.JTextField();
        setSourceCityBtn = new javax.swing.JButton();
        setDestinyCityBtn = new javax.swing.JButton();
        destinyCityName = new javax.swing.JLabel();
        sourceCityName = new javax.swing.JLabel();
        doRouteBtn = new javax.swing.JButton();
        inputAutonomyTxtBox = new javax.swing.JTextField();
        doRouteBtn1 = new javax.swing.JButton();
        autonomyLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        distancesTxtBox = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        routeTxtBox = new javax.swing.JTextArea();
        buildGraphBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFileItem = new javax.swing.JMenu();
        menuOpen = new javax.swing.JMenuItem();
        menuOpenGraph = new javax.swing.JMenuItem();
        menuSave = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuClose = new javax.swing.JMenuItem();
        menuAboutItem = new javax.swing.JMenu();
        menuAbout = new javax.swing.JMenuItem();

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        jMenu5.setText("File");
        jMenuBar3.add(jMenu5);

        jMenu6.setText("Edit");
        jMenuBar3.add(jMenu6);

        javax.swing.GroupLayout ExceptionLayout = new javax.swing.GroupLayout(Exception.getContentPane());
        Exception.getContentPane().setLayout(ExceptionLayout);
        ExceptionLayout.setHorizontalGroup(
            ExceptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        ExceptionLayout.setVerticalGroup(
            ExceptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        citiesJList.setBorder(javax.swing.BorderFactory.createTitledBorder("Cidades Dispon√≠veis"));
        citiesJList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                citiesJListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(citiesJList);
        citiesJList.getAccessibleContext().setAccessibleDescription("");

        GUIElectorPanelBottomNav.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nav_first.png"))); // NOI18N
        btnFirst.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        BtnPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nav_prev.png"))); // NOI18N
        BtnPrev.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPrevActionPerformed(evt);
            }
        });

        BtnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nav_next.png"))); // NOI18N
        BtnNext.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnNextActionPerformed(evt);
            }
        });

        BtnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nav_last.png"))); // NOI18N
        BtnLast.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout GUIElectorPanelBottomNavLayout = new javax.swing.GroupLayout(GUIElectorPanelBottomNav);
        GUIElectorPanelBottomNav.setLayout(GUIElectorPanelBottomNavLayout);
        GUIElectorPanelBottomNavLayout.setHorizontalGroup(
            GUIElectorPanelBottomNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GUIElectorPanelBottomNavLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(BtnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        GUIElectorPanelBottomNavLayout.setVerticalGroup(
            GUIElectorPanelBottomNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GUIElectorPanelBottomNavLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GUIElectorPanelBottomNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(GUIElectorPanelBottomNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BtnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        CityBtnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nav_find.png"))); // NOI18N
        CityBtnSearch.setText("Pesquisar");
        CityBtnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CityBtnSearch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        CityBtnSearch.setVerifyInputWhenFocusTarget(false);
        CityBtnSearch.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        CityBtnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityBtnSearchActionPerformed(evt);
            }
        });

        CityCloseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exit_24.png"))); // NOI18N
        CityCloseBtn.setText("Sair");
        CityCloseBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CityCloseBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        CityCloseBtn.setVerifyInputWhenFocusTarget(false);
        CityCloseBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        CityCloseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityCloseBtnActionPerformed(evt);
            }
        });

        CityTxtBoxName.setText("Cidade");
        CityTxtBoxName.setBorder(javax.swing.BorderFactory.createTitledBorder("Nome"));
        CityTxtBoxName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CityTxtBoxNameFocusLost(evt);
            }
        });
        CityTxtBoxName.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                CityTxtBoxNameInputMethodTextChanged(evt);
            }
        });
        CityTxtBoxName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityTxtBoxNameActionPerformed(evt);
            }
        });
        CityTxtBoxName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CityTxtBoxNameKeyReleased(evt);
            }
        });

        CityTxtBoxCountry.setText("Pa√≠s");
        CityTxtBoxCountry.setBorder(javax.swing.BorderFactory.createTitledBorder("Pa√≠s"));
        CityTxtBoxCountry.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CityTxtBoxCountryFocusLost(evt);
            }
        });
        CityTxtBoxCountry.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                CityTxtBoxCountryInputMethodTextChanged(evt);
            }
        });
        CityTxtBoxCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityTxtBoxCountryActionPerformed(evt);
            }
        });
        CityTxtBoxCountry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CityTxtBoxCountryKeyReleased(evt);
            }
        });

        setSourceCityBtn.setText("Definir Origem");
        setSourceCityBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setSourceCityBtnActionPerformed(evt);
            }
        });

        setDestinyCityBtn.setText("Destino");
        setDestinyCityBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setDestinyCityBtnActionPerformed(evt);
            }
        });

        destinyCityName.setText("Destino");

        sourceCityName.setText("Origem");

        doRouteBtn.setText("Calcular Rota");
        doRouteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doRouteBtnActionPerformed(evt);
            }
        });

        inputAutonomyTxtBox.setText("200");
        inputAutonomyTxtBox.setBorder(javax.swing.BorderFactory.createTitledBorder("Autonomia"));
        inputAutonomyTxtBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputAutonomyTxtBoxFocusLost(evt);
            }
        });
        inputAutonomyTxtBox.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                inputAutonomyTxtBoxInputMethodTextChanged(evt);
            }
        });
        inputAutonomyTxtBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputAutonomyTxtBoxActionPerformed(evt);
            }
        });
        inputAutonomyTxtBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputAutonomyTxtBoxKeyReleased(evt);
            }
        });

        doRouteBtn1.setText("Definir autonomia");
        doRouteBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doRouteBtn1ActionPerformed(evt);
            }
        });

        autonomyLabel.setText("Autonomia = 200");

        distancesTxtBox.setEditable(false);
        distancesTxtBox.setColumns(20);
        distancesTxtBox.setRows(5);
        distancesTxtBox.setText("Dist√¢ncias");
        distancesTxtBox.setBorder(javax.swing.BorderFactory.createTitledBorder("Dist√¢ncias"));
        jScrollPane2.setViewportView(distancesTxtBox);

        routeTxtBox.setEditable(false);
        routeTxtBox.setColumns(20);
        routeTxtBox.setRows(5);
        routeTxtBox.setText("Rota");
        routeTxtBox.setBorder(javax.swing.BorderFactory.createTitledBorder("Rota"));
        jScrollPane3.setViewportView(routeTxtBox);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(CityTxtBoxCountry, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CityTxtBoxName)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(setSourceCityBtn)
                                .addGap(18, 18, 18)
                                .addComponent(sourceCityName))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(setDestinyCityBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(destinyCityName))
                            .addComponent(doRouteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(autonomyLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(inputAutonomyTxtBox, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                .addComponent(doRouteBtn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(78, 78, 78))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(CityTxtBoxName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(CityTxtBoxCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(inputAutonomyTxtBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(doRouteBtn1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(setSourceCityBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sourceCityName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(setDestinyCityBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(destinyCityName)
                            .addComponent(autonomyLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(doRouteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(123, 123, 123))
        );

        buildGraphBtn.setText("Construir grafo");
        buildGraphBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildGraphBtnActionPerformed(evt);
            }
        });

        menuFileItem.setText("File");

        menuOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/config_24.png"))); // NOI18N
        menuOpen.setText("Abrir CSV");
        menuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuOpenActionPerformed(evt);
            }
        });
        menuFileItem.add(menuOpen);

        menuOpenGraph.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuOpenGraph.setIcon(new javax.swing.ImageIcon(getClass().getResource("/config_24.png"))); // NOI18N
        menuOpenGraph.setText("Abrir Grafo");
        menuOpenGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuOpenGraphActionPerformed(evt);
            }
        });
        menuFileItem.add(menuOpenGraph);

        menuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/config_24.png"))); // NOI18N
        menuSave.setText("Guardar");
        menuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSaveActionPerformed(evt);
            }
        });
        menuFileItem.add(menuSave);
        menuFileItem.add(jSeparator1);

        menuClose.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exit_24.png"))); // NOI18N
        menuClose.setText("Sair");
        menuClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCloseActionPerformed(evt);
            }
        });
        menuFileItem.add(menuClose);

        jMenuBar1.add(menuFileItem);

        menuAboutItem.setText("Aplica√ß√£o");

        menuAbout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/about_24.png"))); // NOI18N
        menuAbout.setText("Acerca De");
        menuAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAboutActionPerformed(evt);
            }
        });
        menuAboutItem.add(menuAbout);

        jMenuBar1.add(menuAboutItem);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(GUIElectorPanelBottomNav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(buildGraphBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CityBtnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CityTxtBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CityCloseBtn)
                        .addGap(87, 87, 87))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(GUIElectorPanelBottomNav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buildGraphBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CityBtnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(CityTxtBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(CityCloseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuOpenActionPerformed
        try {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new File(System.getProperty("user.dir")));
            int result = fileChooser.showOpenDialog(fileChooser);
            if (result == JFileChooser.APPROVE_OPTION) {
                String selectedFile = fileChooser.getSelectedFile().getAbsolutePath();
                citiesGlobal = FileInOutUtils.readRawFile(selectedFile);
                updateGUILists();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(Exception, "Erro ao abrir ficheiro", "Erro", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_menuOpenActionPerformed

    private void menuAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAboutActionPerformed
        // TODO add your handling code here:
        try {
            AboutGUI dialog = new AboutGUI(this, true);
            dialog.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(Exception, "Error a abrir dialog", "Error a abrir dialog", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_menuAboutActionPerformed

    private void menuCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCloseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuCloseActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        citiesJList.setSelectedIndex(0);
    }//GEN-LAST:event_btnFirstActionPerformed

    private void BtnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPrevActionPerformed
        // TODO add your handling code here:
        if (GUIListSelectedIndex > 0) {
            GUIListSelectedIndex--;
            citiesJList.setSelectedIndex(GUIListSelectedIndex);
        }
    }//GEN-LAST:event_BtnPrevActionPerformed

    private void BtnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnNextActionPerformed
        if (GUIListSelectedIndex < citiesGlobal.size() - 1) {
            GUIListSelectedIndex++;
            citiesJList.setSelectedIndex(GUIListSelectedIndex);
        }
    }//GEN-LAST:event_BtnNextActionPerformed

    private void BtnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLastActionPerformed
        // TODO add your handling code here:
        citiesJList.setSelectedIndex(citiesGlobal.size() - 1);
    }//GEN-LAST:event_BtnLastActionPerformed

    private void CityBtnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityBtnSearchActionPerformed
        try {
            String textToSearch = CityTxtBoxSearch.getText();

            if (textToSearch.toCharArray().length < 25) {
                int index;

                index = CityBean.findCitiesByName(textToSearch, citiesGlobal);
                if (index > -1) {
                    citiesJList.setSelectedIndex(index);
                } else {
                    JOptionPane.showMessageDialog(Exception, "", "", JOptionPane.OK_OPTION);
                }
            } else {
                throw new Exception();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(Exception, "Cidade n√£o encontrada", "Erro", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_CityBtnSearchActionPerformed

    private void CityCloseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityCloseBtnActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_CityCloseBtnActionPerformed

    private void CityTxtBoxNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CityTxtBoxNameFocusLost
        // Quando GUIElectorTxtBoxName perde o focus


    }//GEN-LAST:event_CityTxtBoxNameFocusLost

    private void CityTxtBoxNameInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_CityTxtBoxNameInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_CityTxtBoxNameInputMethodTextChanged

    private void CityTxtBoxNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityTxtBoxNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CityTxtBoxNameActionPerformed

    private void CityTxtBoxNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CityTxtBoxNameKeyReleased
        // TODO add your handling code here:
        //if (ElectorList.getList().get(GUIListSelectedIndex).getName().equals(CityTxtBoxName.getText())) {
        //    ElectorList.getList().get(GUIListSelectedIndex).setName(CityTxtBoxName.getText());
        //    updateGUIList();
        //}
    }//GEN-LAST:event_CityTxtBoxNameKeyReleased

    private void CityTxtBoxCountryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CityTxtBoxCountryFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_CityTxtBoxCountryFocusLost

    private void CityTxtBoxCountryInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_CityTxtBoxCountryInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_CityTxtBoxCountryInputMethodTextChanged

    private void CityTxtBoxCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityTxtBoxCountryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CityTxtBoxCountryActionPerformed

    private void CityTxtBoxCountryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CityTxtBoxCountryKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_CityTxtBoxCountryKeyReleased

    private void citiesJListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_citiesJListValueChanged
        // TODO add your handling code here:
        selectedCity = citiesGlobal.get(citiesJList.getSelectedIndex());
        citiesJList.ensureIndexIsVisible(citiesJList.getSelectedIndex());
        GUIListSelectedIndex = citiesJList.getSelectedIndex();
        CityTxtBoxName.setText(selectedCity.getName());
        CityTxtBoxCountry.setText(selectedCity.getPais());
    }//GEN-LAST:event_citiesJListValueChanged

    private void menuOpenGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuOpenGraphActionPerformed
        try {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new File(System.getProperty("user.dir")));
            int result = fileChooser.showOpenDialog(fileChooser);
            if (result == JFileChooser.APPROVE_OPTION) {
                String selectedFile = fileChooser.getSelectedFile().getAbsolutePath();
                graphGlobal = FileInOutUtils.readGraphFile(selectedFile);
                citiesGlobal = graphGlobal.getCities().stream().toList();
                updateGUILists();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(Exception, "Erro ao abrir ficheiro com grafo", "Erro", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_menuOpenGraphActionPerformed

    private void doRouteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doRouteBtnActionPerformed
        dijkstraAlgorithmGlobal = new DijkstraAlgorithm(graphGlobal);
        distancesGlobal = dijkstraAlgorithmGlobal.findShortestPath(sourceCity, destinyCity, AUTONOMY_KM);
        routeTxtBox.setText(route);
        distancesTxtBox.setText(DistanceUtils.getAllDistancesText(distancesGlobal));
    }//GEN-LAST:event_doRouteBtnActionPerformed

    private void setSourceCityBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setSourceCityBtnActionPerformed
        sourceCityName.setText(selectedCity.getName());
        sourceCity = citiesGlobal.get(GUIListSelectedIndex);
    }//GEN-LAST:event_setSourceCityBtnActionPerformed

    private void setDestinyCityBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setDestinyCityBtnActionPerformed
        destinyCityName.setText(selectedCity.getName());
        destinyCity = citiesGlobal.get(GUIListSelectedIndex);
    }//GEN-LAST:event_setDestinyCityBtnActionPerformed

    private void inputAutonomyTxtBoxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputAutonomyTxtBoxFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_inputAutonomyTxtBoxFocusLost

    private void inputAutonomyTxtBoxInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_inputAutonomyTxtBoxInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_inputAutonomyTxtBoxInputMethodTextChanged

    private void inputAutonomyTxtBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputAutonomyTxtBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputAutonomyTxtBoxActionPerformed

    private void inputAutonomyTxtBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputAutonomyTxtBoxKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_inputAutonomyTxtBoxKeyReleased

    private void doRouteBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doRouteBtn1ActionPerformed

        try {
            AUTONOMY_KM = Integer.parseInt(inputAutonomyTxtBox.getText()); // Tenta converter a string para double
        } catch (NumberFormatException e) {
            AUTONOMY_KM = 200;
        }
        autonomyLabel.setText("Autonomia = " + AUTONOMY_KM);
    }//GEN-LAST:event_doRouteBtn1ActionPerformed

    private void menuSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSaveActionPerformed
        if (graphGlobal == null) {
            JOptionPane.showMessageDialog(Exception, "Grafo ainda n√£o foi construido", "Erro", JOptionPane.OK_OPTION);
            return;
        }
        try {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new File(System.getProperty("user.dir")));
            int result = fileChooser.showOpenDialog(fileChooser);
            if (result == JFileChooser.APPROVE_OPTION) {
                String selectedFile = fileChooser.getSelectedFile().getAbsolutePath();
                FileInOutUtils.saveGraphFile(graphGlobal, selectedFile);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(Exception, "Erro ao guardar ficheiro", "Erro", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_menuSaveActionPerformed

    private void buildGraphBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildGraphBtnActionPerformed
        graphGlobal = RouteService.buildGraph(citiesGlobal);
    }//GEN-LAST:event_buildGraphBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnLast;
    private javax.swing.JButton BtnNext;
    private javax.swing.JButton BtnPrev;
    private javax.swing.JButton CityBtnSearch;
    private javax.swing.JButton CityCloseBtn;
    private javax.swing.JTextField CityTxtBoxCountry;
    private javax.swing.JTextField CityTxtBoxName;
    private javax.swing.JTextField CityTxtBoxSearch;
    private javax.swing.JDialog Exception;
    private javax.swing.JPanel GUIElectorPanelBottomNav;
    private javax.swing.JLabel autonomyLabel;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton buildGraphBtn;
    private javax.swing.JList<String> citiesJList;
    private javax.swing.JLabel destinyCityName;
    private javax.swing.JTextArea distancesTxtBox;
    private javax.swing.JButton doRouteBtn;
    private javax.swing.JButton doRouteBtn1;
    private javax.swing.JTextField inputAutonomyTxtBox;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem menuAbout;
    private javax.swing.JMenu menuAboutItem;
    private javax.swing.JMenuItem menuClose;
    private javax.swing.JMenu menuFileItem;
    private javax.swing.JMenuItem menuOpen;
    private javax.swing.JMenuItem menuOpenGraph;
    private javax.swing.JMenuItem menuSave;
    private javax.swing.JTextArea routeTxtBox;
    private javax.swing.JButton setDestinyCityBtn;
    private javax.swing.JButton setSourceCityBtn;
    private javax.swing.JLabel sourceCityName;
    // End of variables declaration//GEN-END:variables
}
